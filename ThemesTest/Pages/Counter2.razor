@page "/counter2"

@inject NavigationManager navigationManager


<PageTitle>Counter</PageTitle>

<h1>Counter 2</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<button class="btn btn-primary" @onclick="NavigateToIndexWithPageAndCounterQueryStrings">Go to index</button>

<div>
    <h2>Parameters from query string</h2>
    <h4>Return page: @ReturnPage</h4>
    <h4>Count: @Count</h4>
</div>

@code {
    [Parameter, SupplyParameterFromQuery]
    public int Count { get; set; }

    [Parameter, SupplyParameterFromQuery]
    public string ReturnPage { get; set; }

    private const string ReturnPageQueryParameter = "returnPage";
    private const string CountQueryParameter = "count";
    private int currentCount = 0;

    protected override void OnInitialized()
    {
        currentCount = Count;
    }

    private void IncrementCount()
    {
        currentCount++;
    }

    private void NavigateToIndexWithPageAndCounterQueryStrings()
    {
        var uriWithQuerystrings = navigationManager.GetUriWithQueryParameters(nameof(Index),
            new Dictionary<string, object?>()
            {
                { ReturnPageQueryParameter,   nameof(Counter2) },
                { CountQueryParameter, currentCount }      
            });

        navigationManager.NavigateTo(uriWithQuerystrings);
    }
}
